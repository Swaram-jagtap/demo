pipeline {
       environment {

        registry = "swaramdocker/hackermen"

        registryCredential = 'swaramdocker'

        dockerImage = ''

    }

    agent any
    stages {
        stage('Static Analysis') {
            steps {
                echo 'Run the static analysis to the code'
            }
        }
        stage('Unit & Integration Tests') {
            steps {
                script {
                    //try {
                        sh './gradlew clean build -x test --no-daemon' //run a gradle task
                    //} finally {
                    //    junit '**/build/test-results/test/*.xml' //make the junit test results available in any case (success & failure)
                    //}
                }
            }
        }

        stage('Building our image') {

            steps {

                script {

                    dockerImage = docker.build registry + ":$BUILD_NUMBER"

                }

            }

        }

        stage('push image') {

            steps {

                script {

                    docker.withRegistry( '', registryCredential ) {

                        dockerImage.push()

                    }

                }

            }

        }
        stage('Deploy our image final') {
            steps{
                sh 'docker run -d  --net=roachnet  -p 8091:8080 swaramdocker/hackermen:$BUILD_NUMBER'
            }
        }
        stage('Security Check') {
            steps {
                echo 'Run the security check against the application'
            }
        }
        stage('Run Unit Tests') {
            steps {
                echo 'Run unit tests from the source code'
            }
        }
        stage('Run Integration Tests') {
            steps {
                echo 'Run only crucial integration tests from the source code'
            }
        }
        stage('Publish Artifacts') {
            steps {
                echo 'Save the assemblies generated from the compilation'
            }
        }
    }
}